# Generated by Django 2.0.7 on 2018-08-06 18:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dni', models.CharField(max_length=10)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'tutor'), (2, 'tech'), (3, 'tutor_leader'), (4, 'tech_leader')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PedagogicalForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observations', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('state', models.PositiveSmallIntegerField(choices=[(1, 'Pendiente'), (2, 'Atendido'), (3, 'Rechazado')], null=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Periódica'), (2, 'Llamada'), (3, 'Incidencia')], null=True)),
                ('created_by', models.CharField(max_length=100)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('date_joined', models.DateField()),
                ('date_updated', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amie', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128)),
                ('address', models.CharField(max_length=100)),
                ('reference', models.CharField(max_length=100)),
                ('workday', models.PositiveSmallIntegerField(choices=[(1, 'Matutina'), (2, 'Vespertina')], null=True)),
                ('parish', models.CharField(max_length=100)),
                ('sector', models.PositiveSmallIntegerField(choices=[(1, 'Norte'), (2, 'Centro'), (3, 'Vía a la costa'), (4, 'Sur')], null=True)),
                ('priority', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.CharField(max_length=100)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('date_joined', models.DateField()),
                ('date_updated', models.DateField(null=True)),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observations', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_planned', models.DateTimeField()),
                ('check_in', models.DateTimeField(null=True)),
                ('check_out', models.DateTimeField(null=True)),
                ('coordinates_in', models.CharField(max_length=100)),
                ('coordinates_out', models.CharField(max_length=100)),
                ('observations', models.CharField(max_length=200, null=True)),
                ('state', models.PositiveSmallIntegerField(choices=[(1, 'Pendiente'), (2, 'Realizada'), (3, 'No Realizada')], null=True)),
                ('created_by', models.CharField(max_length=100)),
                ('updated_by', models.CharField(max_length=100, null=True)),
                ('date_joined', models.DateField()),
                ('date_updated', models.DateField(null=True)),
                ('requirement', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Requirement')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.School')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='requirement',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.School'),
        ),
        migrations.AddField(
            model_name='requirement',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
